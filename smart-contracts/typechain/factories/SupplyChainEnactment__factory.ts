/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SupplyChainEnactment,
  SupplyChainEnactmentInterface,
} from "../SupplyChainEnactment";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "EndEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "NonConformingTrace",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "begin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b506105ac806100256000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063bd51d79514610030575b600080fd5b61004a60048036038101906100459190610348565b61004c565b005b610055836100d8565b6100d3576100976040518060400160405280600e81526020017f4e6f6e20636f6e666f726d696e670000000000000000000000000000000000008152506101e1565b7fe0d09cad4b2ab51479fdb704193f19cde402176e90d1478217b8c8df7b3e634b8383836040516100ca93929190610415565b60405180910390a15b505050565b600060028214806100e95750600482145b806100f45750600682145b1561010257600090506101dc565b6000826001901b60005416141561011c57600090506101dc565b816001901b19600080828254169250508190555060018261013d9190610476565b6001901b600080828254179250508190555060006004600054161461016d57602860008082825417925050819055505b60006050600054161461019c576050196000808282541692505081905550608060008082825417925050819055505b600061200060005416146101d7577f13fb2324e748984eb619586cd39216c6054dac3b64bb998f1d9cf67e223c5f9a60405160405180910390a15b600190505b919050565b610277816040516024016101f59190610554565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061027a565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b600080fd5b6000819050919050565b6102c0816102ad565b81146102cb57600080fd5b50565b6000813590506102dd816102b7565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610308576103076102e3565b5b8235905067ffffffffffffffff811115610325576103246102e8565b5b602083019150836001820283011115610341576103406102ed565b5b9250929050565b600080600060408486031215610361576103606102a3565b5b600061036f868287016102ce565b935050602084013567ffffffffffffffff8111156103905761038f6102a8565b5b61039c868287016102f2565b92509250509250925092565b6103b1816102ad565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006103f483856103b7565b93506104018385846103c8565b61040a836103d7565b840190509392505050565b600060408201905061042a60008301866103a8565b818103602083015261043d8184866103e8565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610481826102ad565b915061048c836102ad565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104c1576104c0610447565b5b828201905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105065780820151818401526020810190506104eb565b83811115610515576000848401525b50505050565b6000610526826104cc565b61053081856104d7565b93506105408185602086016104e8565b610549816103d7565b840191505092915050565b6000602082019050818103600083015261056e818461051b565b90509291505056fea26469706673582212200cee42fddc1ec4c69e517c22d51d07af852a56cedbe27db2c751ff2a22ed88a664736f6c63430008090033";

export class SupplyChainEnactment__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SupplyChainEnactment> {
    return super.deploy(overrides || {}) as Promise<SupplyChainEnactment>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SupplyChainEnactment {
    return super.attach(address) as SupplyChainEnactment;
  }
  connect(signer: Signer): SupplyChainEnactment__factory {
    return super.connect(signer) as SupplyChainEnactment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SupplyChainEnactmentInterface {
    return new utils.Interface(_abi) as SupplyChainEnactmentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SupplyChainEnactment {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SupplyChainEnactment;
  }
}
